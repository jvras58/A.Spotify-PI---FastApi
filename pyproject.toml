[tool.poetry]
name = "Spotify-fastapi"
version = "0.0.1"
description = "Back-end of a Spotify clone using FastAPI"
authors = ["jvras <jvras@cin.ufpe.br>"]
readme = "README.md"


[tool.poetry.dependencies]
python = "^3.11"
fastapi = {extras = ["standard"], version = "^0.112.1"}
uvicorn = "^0.30.6"
pydantic = {extras = ["email"], version = "^2.4.2"}
sqlalchemy = "^2.0.32"
pydantic-settings = "^2.4.0"
alembic = "^1.13.2"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
python-multipart = "^0.0.9"
bcrypt = "^4.2.0"
requests = "^2.32.3"
cachetools = "^5.4.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
taskipy = "^1.13.0"
blue = "^0.9.1"
ruff = "^0.6.0"
httpx = "^0.27.0"
isort = "^5.13.2"
commitizen = "^3.29.0"
factory-boy = "^3.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
exclude = ['.venv', 'migrations']

[tool.isort]
profile = "black"
line_length = 88
extend_skip = ['migrations']

[tool.blue]
extend-exclude = '(migrations/)'
line_length = 88

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

[tool.taskipy.tasks]
lint = 'ruff check . && blue --check . --diff'
format = 'blue .  && isort .'
run = 'fastapi dev app/startup.py --reload'
pre_test = 'task lint'
test = 'pytest -s -x --cov=app -vv'
post_test = 'coverage html'
export_libs = 'poetry export -f requirements.txt --output requirements.txt'
